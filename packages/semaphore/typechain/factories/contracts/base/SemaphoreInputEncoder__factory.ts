/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  SemaphoreInputEncoder,
  SemaphoreInputEncoderInterface,
} from "../../../contracts/base/SemaphoreInputEncoder";

const _abi = [
  {
    inputs: [],
    name: "EVM_CHAIN_ID_TYPE",
    outputs: [
      {
        internalType: "bytes2",
        name: "",
        type: "bytes2",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256[8]",
            name: "proof",
            type: "uint256[8]",
          },
          {
            internalType: "uint256",
            name: "nullifierHash",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "signalHash",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "externalNullifier",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
        ],
        internalType: "struct SemaphoreInputEncoder.Proof",
        name: "_args",
        type: "tuple",
      },
      {
        internalType: "uint8",
        name: "_maxEdges",
        type: "uint8",
      },
    ],
    name: "_encodeInputs",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainIdType",
    outputs: [
      {
        internalType: "uint48",
        name: "",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "";

type SemaphoreInputEncoderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SemaphoreInputEncoderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SemaphoreInputEncoder__factory extends ContractFactory {
  constructor(...args: SemaphoreInputEncoderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SemaphoreInputEncoder> {
    return super.deploy(overrides || {}) as Promise<SemaphoreInputEncoder>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SemaphoreInputEncoder {
    return super.attach(address) as SemaphoreInputEncoder;
  }
  override connect(signer: Signer): SemaphoreInputEncoder__factory {
    return super.connect(signer) as SemaphoreInputEncoder__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SemaphoreInputEncoderInterface {
    return new utils.Interface(_abi) as SemaphoreInputEncoderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SemaphoreInputEncoder {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SemaphoreInputEncoder;
  }
}
