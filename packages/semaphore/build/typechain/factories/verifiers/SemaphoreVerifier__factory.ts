/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  SemaphoreVerifier,
  SemaphoreVerifierInterface,
} from "../../verifiers/SemaphoreVerifier";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_verifier2_2",
        type: "address",
      },
      {
        internalType: "address",
        name: "_verifier8_2",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "v2_2",
    outputs: [
      {
        internalType: "contract ISemaphoreVerifier2_2",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "v8_2",
    outputs: [
      {
        internalType: "contract ISemaphoreVerifier8_2",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "a",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "b",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "c",
        type: "uint256[2]",
      },
      {
        internalType: "bytes",
        name: "input",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "maxEdges",
        type: "uint8",
      },
    ],
    name: "verifyProof",
    outputs: [
      {
        internalType: "bool",
        name: "r",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405162000eab38038062000eab833981810160405281019061003491906100d1565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505061015f565b6000815190506100cb81610148565b92915050565b600080604083850312156100e8576100e7610143565b5b60006100f6858286016100bc565b9250506020610107858286016100bc565b9150509250929050565b600061011c82610123565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b61015181610111565b811461015c57600080fd5b50565b610d3c806200016f6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80632e4286861461004657806330ba9e4d14610064578063b4b764f214610082575b600080fd5b61004e6100b2565b60405161005b91906109ba565b60405180910390f35b61006c6100d6565b60405161007991906109d5565b60405180910390f35b61009c600480360381019061009791906105fe565b6100fc565b6040516100a9919061099f565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060018260ff1614156101d9576000838060200190518101906101209190610698565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f398789b888888856040518563ffffffff1660e01b81526004016101819493929190610958565b60206040518083038186803b15801561019957600080fd5b505afa1580156101ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d191906106c5565b9150506102bb565b60078260ff1614156102b6576000838060200190518101906101fb91906105d0565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638cbac0fa888888856040518563ffffffff1660e01b815260040161025e9493929190610911565b60206040518083038186803b15801561027657600080fd5b505afa15801561028a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ae91906106c5565b9150506102bb565b600090505b95945050505050565b60006102d76102d284610a15565b6109f0565b905080828560408602820111156102f1576102f0610c9c565b5b60005b85811015610321578161030788826104f8565b8452602084019350604083019250506001810190506102f4565b5050509392505050565b600061033e61033984610a3b565b6109f0565b9050808285602086028201111561035857610357610c9c565b5b60005b85811015610388578161036e88826105a6565b84526020840193506020830192505060018101905061035b565b5050509392505050565b60006103a56103a084610a61565b6109f0565b905080828560208602820111156103bf576103be610c9c565b5b60005b858110156103ef57816103d58882610591565b8452602084019350602083019250506001810190506103c2565b5050509392505050565b600061040c61040784610a87565b6109f0565b9050808285602086028201111561042657610425610c9c565b5b60005b85811015610456578161043c88826105a6565b845260208401935060208301925050600181019050610429565b5050509392505050565b600061047361046e84610aad565b6109f0565b90508281526020810184848401111561048f5761048e610ca1565b5b61049a848285610c28565b509392505050565b600082601f8301126104b7576104b6610c97565b5b60026104c48482856102c4565b91505092915050565b600082601f8301126104e2576104e1610c97565b5b600c6104ef84828561032b565b91505092915050565b600082601f83011261050d5761050c610c97565b5b600261051a848285610392565b91505092915050565b600082601f83011261053857610537610c97565b5b60066105458482856103f9565b91505092915050565b60008151905061055d81610cc1565b92915050565b600082601f83011261057857610577610c97565b5b8135610588848260208601610460565b91505092915050565b6000813590506105a081610cd8565b92915050565b6000815190506105b581610cd8565b92915050565b6000813590506105ca81610cef565b92915050565b600061018082840312156105e7576105e6610cab565b5b60006105f5848285016104cd565b91505092915050565b6000806000806000610140868803121561061b5761061a610cab565b5b6000610629888289016104f8565b955050604061063a888289016104a2565b94505060c061064b888289016104f8565b93505061010086013567ffffffffffffffff81111561066d5761066c610ca6565b5b61067988828901610563565b92505061012061068b888289016105bb565b9150509295509295909350565b600060c082840312156106ae576106ad610cab565b5b60006106bc84828501610523565b91505092915050565b6000602082840312156106db576106da610cab565b5b60006106e98482850161054e565b91505092915050565b60006106fe83836107d0565b60408301905092915050565b60006107168383610902565b60208301905092915050565b61072b81610b06565b6107358184610b66565b925061074082610ade565b8060005b8381101561077157815161075887826106f2565b965061076383610b32565b925050600181019050610744565b505050505050565b61078281610b11565b61078c8184610b71565b925061079782610ae8565b8060005b838110156107c85781516107af878261070a565b96506107ba83610b3f565b92505060018101905061079b565b505050505050565b6107d981610b1c565b6107e38184610b7c565b92506107ee82610af2565b8060005b8381101561081f578151610806878261070a565b965061081183610b4c565b9250506001810190506107f2565b505050505050565b61083081610b1c565b61083a8184610b87565b925061084582610af2565b8060005b8381101561087657815161085d878261070a565b965061086883610b4c565b925050600181019050610849565b505050505050565b61088781610b27565b6108918184610b92565b925061089c82610afc565b8060005b838110156108cd5781516108b4878261070a565b96506108bf83610b59565b9250506001810190506108a0565b505050505050565b6108de81610b9d565b82525050565b6108ed81610be0565b82525050565b6108fc81610c04565b82525050565b61090b81610bc9565b82525050565b6000610280820190506109276000830187610827565b6109346040830186610722565b61094160c0830185610827565b61094f610100830184610779565b95945050505050565b60006101c08201905061096e6000830187610827565b61097b6040830186610722565b61098860c0830185610827565b61099661010083018461087e565b95945050505050565b60006020820190506109b460008301846108d5565b92915050565b60006020820190506109cf60008301846108e4565b92915050565b60006020820190506109ea60008301846108f3565b92915050565b60006109fa610a0b565b9050610a068282610c37565b919050565b6000604051905090565b600067ffffffffffffffff821115610a3057610a2f610c68565b5b602082029050919050565b600067ffffffffffffffff821115610a5657610a55610c68565b5b602082029050919050565b600067ffffffffffffffff821115610a7c57610a7b610c68565b5b602082029050919050565b600067ffffffffffffffff821115610aa257610aa1610c68565b5b602082029050919050565b600067ffffffffffffffff821115610ac857610ac7610c68565b5b610ad182610cb0565b9050602081019050919050565b6000819050919050565b6000819050919050565b6000819050919050565b6000819050919050565b600060029050919050565b6000600c9050919050565b600060029050919050565b600060069050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600081905092915050565b600081905092915050565b600081905092915050565b600081905092915050565b600081905092915050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b6000610beb82610bf2565b9050919050565b6000610bfd82610ba9565b9050919050565b6000610c0f82610c16565b9050919050565b6000610c2182610ba9565b9050919050565b82818337600083830152505050565b610c4082610cb0565b810181811067ffffffffffffffff82111715610c5f57610c5e610c68565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b610cca81610b9d565b8114610cd557600080fd5b50565b610ce181610bc9565b8114610cec57600080fd5b50565b610cf881610bd3565b8114610d0357600080fd5b5056fea2646970667358221220326a18f8a18b1d758c9afec32c8d61b7d21651c58130fafa55c47c84701b1bf864736f6c63430008060033";

type SemaphoreVerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SemaphoreVerifierConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SemaphoreVerifier__factory extends ContractFactory {
  constructor(...args: SemaphoreVerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _verifier2_2: PromiseOrValue<string>,
    _verifier8_2: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SemaphoreVerifier> {
    return super.deploy(
      _verifier2_2,
      _verifier8_2,
      overrides || {}
    ) as Promise<SemaphoreVerifier>;
  }
  override getDeployTransaction(
    _verifier2_2: PromiseOrValue<string>,
    _verifier8_2: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _verifier2_2,
      _verifier8_2,
      overrides || {}
    );
  }
  override attach(address: string): SemaphoreVerifier {
    return super.attach(address) as SemaphoreVerifier;
  }
  override connect(signer: Signer): SemaphoreVerifier__factory {
    return super.connect(signer) as SemaphoreVerifier__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SemaphoreVerifierInterface {
    return new utils.Interface(_abi) as SemaphoreVerifierInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SemaphoreVerifier {
    return new Contract(address, _abi, signerOrProvider) as SemaphoreVerifier;
  }
}
