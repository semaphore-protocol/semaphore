name: pull-requests

on:
    pull_request:

env:
    TREE_DEPTH: 10

jobs:
    style:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v2

            - name: Install Node.js
              uses: actions/setup-node@v1
              with:
                  node-version: "18"

            - name: Get yarn cache directory path
              id: yarn-cache-dir-path
              run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

            - name: Restore yarn cache
              uses: actions/cache@v3
              id: yarn-cache
              with:
                  path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
                  key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-yarn-

            - name: Install dependencies
              run: yarn

            - name: Compile contracts
              run: yarn compile:contracts

            - name: Build libraries
              run: yarn build:libraries

            - name: Build subgraph
              run: yarn build:subgraph

            - name: Run Prettier
              run: yarn prettier

            - name: Run Eslint
              run: yarn lint

    test:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v2

            - name: Install Node.js
              uses: actions/setup-node@v1
              with:
                  node-version: "18"

            # https://github.com/iden3/circuits/blob/8fffb6609ecad0b7bcda19bb908bdb544bdb3cf7/.github/workflows/main.yml#L18-L22
            - name: Setup Circom deps
              run: sudo apt-get update && sudo apt-get install -y wget nlohmann-json3-dev libgmp-dev nasm g++ build-essential

            - name: Setup Circom
              run: wget https://github.com/iden3/circom/releases/latest/download/circom-linux-amd64 && sudo mv ./circom-linux-amd64 /usr/bin/circom && sudo chmod +x /usr/bin/circom

            - name: Get yarn cache directory path
              id: yarn-cache-dir-path
              run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

            - name: Restore yarn cache
              uses: actions/cache@v3
              id: yarn-cache
              with:
                  path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
                  key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-yarn-

            - name: Install dependencies
              run: yarn

            - name: Build libraries
              run: yarn build:libraries

            - name: Build subgraph
              run: yarn build:subgraph

            - name: Test contracts, libraries, circuits and subgraph
              run: yarn test
