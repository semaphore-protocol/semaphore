name: production

on:
  push:
    branches:
      - main

jobs:
  style:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 16.x

      - name: Setup DVC
        uses: iterative/setup-dvc@v1

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - name: Restore yarn cache
        uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn

      - name: fetch Fixtures
        run: cd solidity-fixtures && dvc pull && cd .. && mv solidity-fixtures packages/semaphore

      - name: Compile contracts
        run: yarn compile

      - name: Build libraries
        run: yarn build

      - name: Run Prettier
        run: yarn prettier

      - name: Run Eslint
        run: yarn lint

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        type:
          - libraries
          - contracts
    steps:
      - uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 16.x

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - name: Restore yarn cache
        uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn

      - name: Compile contracts
        run: yarn compile

      - name: Build libraries
        run: yarn build

      - name: Test contracts and libraries
        run: yarn test:${{ matrix.type }}

      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          flag-name: run-${{ matrix.type }}
          path-to-lcov: ./coverage/${{ matrix.type }}/lcov.info
          parallel: true

  coverage:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Coveralls Finished
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true
